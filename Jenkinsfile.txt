pipeline {
    agent any
    
    tools {
        nodejs 'NodeJs-16'
    }
    
    environment {
        BUILD_IDENTIFIER = "${BUILD_ID}"
        HEROKU_URL= 'https://calm-meadow-91653.herokuapp.com/'
        
        EMAIL_BODY = 

        """

            <p>EXECUTED: Job <b>\'${env.JOB_NAME}:${env.BUILD_NUMBER})\'</b></p>

            <p>

            View console output at 

            "<a href="${env.BUILD_URL}">${env.JOB_NAME}:${env.BUILD_NUMBER}</a>"

            </p> 

            <p><i>(Build log is attached.)</i></p>

        """

        EMAIL_SUBJECT_SUCCESS = "Status: 'SUCCESS' -Job \'${env.JOB_NAME}:${env.BUILD_NUMBER}\'" 

        EMAIL_SUBJECT_FAILURE = "Status: 'FAILURE' -Job \'${env.JOB_NAME}:${env.BUILD_NUMBER}\'" 

        EMAIL_RECEPIENT = 'evelynemwende8@gmail.com'
    }
    
    stages {
        stage('Clone repository') {
            steps {
                echo 'Cloning repository'
                git 'https://github.com/EvelyneMwende/gallery'
            }
        }
        stage('Build') {
            steps {
                echo 'Installing packages'
                sh 'npm install'
            }
        }

        stage('Test') {
            steps {
                echo 'Testing'
                sh 'npm test'
            }
        }

        stage('Deploy') {
            steps {
                echo 'Deploying to Heroku'
                withCredentials([usernameColonPassword(credentialsId: 'heroku', variable: 'HEROKU_CREDENTIALS' )]){
                    sh 'git push https://${HEROKU_CREDENTIALS}@git.heroku.com/calm-meadow-91653.git master'
                }
            }
        }
        
    }
    
    post {
        success {
            slackSend color: "good", message: "Build ID : ${BUILD_ID} \nHeroku URL: https://calm-meadow-91653.herokuapp.com/"
            
        }
        
        failure {
             emailext attachLog: true, 
                body: EMAIL_BODY, 

                subject: EMAIL_SUBJECT_FAILURE, 

                to: EMAIL_RECEPIENT
            
        }
    }
    
}
